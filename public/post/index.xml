<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Ariel Fernandes</title><link>http://localhost:1313/post/</link><description>Recent content in Posts on Ariel Fernandes</description><generator>Hugo</generator><language>en</language><copyright>© 2022 Ariel Fernandes</copyright><lastBuildDate>Wed, 12 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Introdução a listas e arrays em Python</title><link>http://localhost:1313/post/list_array_python/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/list_array_python/</guid><description>&lt;h3 id="lista">
 Lista
 &lt;a class="anchor" href="#lista">#&lt;/a>
&lt;/h3>
&lt;p>Listas são estruturas mutáveis, o que significa que é possível substituir, inserir ou remover elementos contidos nelas. No entanto, é importante destacar que as listas retornadas pelos operadores de fatia e concatenação são novas listas e não partes da lista original.&lt;/p>
&lt;p>O tipo &amp;ldquo;list&amp;rdquo; inclui vários métodos chamados mutadores, cujo objetivo é modificar a estrutura de uma lista. Entre os métodos mais utilizados estão o &amp;ldquo;append&amp;rdquo;, &amp;ldquo;insert&amp;rdquo;, &amp;ldquo;pop&amp;rdquo;, &amp;ldquo;remove&amp;rdquo; e &amp;ldquo;sort&amp;rdquo;.&lt;/p></description></item><item><title>Multiplexadores</title><link>http://localhost:1313/post/mux/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/mux/</guid><description>&lt;p>Possui M entradas de dados e uma saída (Mx1), permitindo que apenas uma das entradas seja passada para a saída.
Pode ser chamado de seletor, pois seleciona uma das entradas para à saída.&lt;/p>
&lt;p>Multiplexador produz um 1 ou um 0 na saída, dependendo de se a entrada selecionada tem um 1 ou 0.&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/arielfernandes/blog/main/resources/_gen/images/mux/selSaida.png" alt="" />&lt;/p>
&lt;h1 id="multiplexador-2x1">
 Multiplexador 2x1
 &lt;a class="anchor" href="#multiplexador-2x1">#&lt;/a>
&lt;/h1>
&lt;p>Tem duas entradas de dados i1 e i0, uma entrada de seleção s0 e uma saída de dados d.&lt;/p></description></item><item><title>Utilizando dicionários em Python: uma alternativa ao switch case.</title><link>http://localhost:1313/post/dicionario/</link><pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/dicionario/</guid><description>&lt;p>Em Python, um dicionário é uma coleção de pares chave-valor, onde cada chave é única e mapeia para um valor específico. É semelhante a uma tabela hash em outras linguagens de programação.&lt;/p>
&lt;p>Uma vantagem de se utilizar dicionários em Python é que eles permitem a busca e acesso aos valores armazenados de forma rápida e eficiente, em comparação com o uso de estruturas de controle como o switch case.&lt;/p>
&lt;p>Para ilustrar essa ideia, vamos supor que temos uma função que recebe como parâmetro uma string contendo um nome de um mês, e precisamos retornar o número correspondente a esse mês. Em outras linguagens, poderíamos utilizar um switch case para resolver esse problema. Em Python, uma abordagem mais simples e elegante seria utilizar um dicionário:&lt;/p></description></item><item><title>Introdução ao C++</title><link>http://localhost:1313/post/introcpp/</link><pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate><guid>http://localhost:1313/post/introcpp/</guid><description>&lt;p>&lt;a href="">&lt;img width=200 src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/1822px-ISO_C%2B%2B_Logo.svg.png">&lt;/a>&lt;/p>
&lt;h4 id="estrutura-básica">
 Estrutura básica
 &lt;a class="anchor" href="#estrutura-b%c3%a1sica">#&lt;/a>
&lt;/h4>
&lt;p>Para iniciarmos um programa em c++, precisamos importar algumas bibliotecas
padrão da linguagem, normalmente quando usamos alguma IDE de programação, quando
criamos o arquivo .cpp direto pela IDE, ela por definição trás essa estrutura.
Mas como vamos iniciar do zero, irei explicar como criar essa estrutura,
explicando cada item.&lt;/p>
&lt;h1 id="primeiro-passo">
 Primeiro passo
 &lt;a class="anchor" href="#primeiro-passo">#&lt;/a>
&lt;/h1>
&lt;p>Vamos iniciar nosso programa criando um arquivo de texto, com a extenção .cpp, vamos dar o nome para nosso arquivo de primeiroCodigo.cpp, seu arquivo não deve conter espaço entre as palavras e nem acentuação, por definicição e boas práticas iremos evitar esse tipo de escrita para nossos programas.&lt;/p></description></item></channel></rss>